.TH PRINTF 3 "March 27th Holberton School project"

.SH NAME
_printf \- produces formatted output

.SH SYNOPSIS
.B #include "main.h"
.B int _printf(const char *format, ...);

.SH DESCRIPTION
The _printf() function, same as the printf one handles format and goes trough to see what it need to do i like to see it as a question answer system, we check if null be go trough we see if theres % we go trough and increment and if we found a specifier there is the answer. Our printf function handles the following specifier:

.IP \[bu] 10
% c  : Prints a char.
.IP \[bu] 10
% s  : Prints a string.
.IP \[bu] 10
%%   : Prints a percent sign ('%').
.IP \[bu] 10
% d  : Prints an integer.
.IP \[bu] 10
% i  : Prints an integer.

The function supports variable arguments, which are provided after the format string.

The function works by iterating over the 'format' string and processing each character.
If a '%' character is encountered, the subsequent character (the specifier) is processed
using the corresponding function. If a non-format character is encountered,
it is printed directly.

If as example we face a specifier we don't know we will still print it and return 2.

The function uses a custom implementation of `va_list` and `va_start` to handle the variable
arguments passed to it.

The _printf() function will return one if format is null.

.SH RETURN VALUE
The prinf function returns the value len_printed wich is the number of time we printed caracters.

.SH SEE ALSO
printf(3)

.SH BUGS
Our prinf function only takes 5 specifier wich are %d, %s %c %i and %% i wouldnt call that a bug but i prefer Precising it.

.SH AUTHORS
Arnaud Bonnet Christophe Barrere.
